
assignment.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000018  00800100  0000051a  000005ae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000051a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800118  00800118  000005c6  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  000005c8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000090  00000000  00000000  00000c94  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000020  00000000  00000000  00000d24  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000000c0  00000000  00000000  00000d44  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000004dc  00000000  00000000  00000e04  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000019c  00000000  00000000  000012e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000005d0  00000000  00000000  0000147c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000040  00000000  00000000  00001a4c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000160  00000000  00000000  00001a8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000118  00000000  00000000  00001bec  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 00000038  00000000  00000000  00001d04  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_13>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 67 00 	jmp	0xce	; 0xce <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea e1       	ldi	r30, 0x1A	; 26
  7c:	f5 e0       	ldi	r31, 0x05	; 5
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 31       	cpi	r26, 0x18	; 24
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	11 e0       	ldi	r17, 0x01	; 1
  8c:	a8 e1       	ldi	r26, 0x18	; 24
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a4 32       	cpi	r26, 0x24	; 36
  96:	b1 07       	cpc	r27, r17
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 cd 01 	call	0x39a	; 0x39a <main>
  9e:	0c 94 8b 02 	jmp	0x516	; 0x516 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__vector_13>:
unsigned short ACCUMULATE, LIGHT = 0x0F;
unsigned char  D[] = {16,16,16,16} , i = 0 , j , k , l , m , result = 0  ;


ISR(TIMER1_OVF_vect)
{
  a6:	1f 92       	push	r1
  a8:	0f 92       	push	r0
  aa:	0f b6       	in	r0, 0x3f	; 63
  ac:	0f 92       	push	r0
  ae:	11 24       	eor	r1, r1
  b0:	8f 93       	push	r24
  b2:	9f 93       	push	r25
	TCNT1 = INTERVAL_time;
  b4:	88 ef       	ldi	r24, 0xF8	; 248
  b6:	9f ef       	ldi	r25, 0xFF	; 255
  b8:	90 93 85 00 	sts	0x0085, r25
  bc:	80 93 84 00 	sts	0x0084, r24
}
  c0:	9f 91       	pop	r25
  c2:	8f 91       	pop	r24
  c4:	0f 90       	pop	r0
  c6:	0f be       	out	0x3f, r0	; 63
  c8:	0f 90       	pop	r0
  ca:	1f 90       	pop	r1
  cc:	18 95       	reti

000000ce <__vector_21>:

ISR(ADC_vect)
{
  ce:	1f 92       	push	r1
  d0:	0f 92       	push	r0
  d2:	0f b6       	in	r0, 0x3f	; 63
  d4:	0f 92       	push	r0
  d6:	11 24       	eor	r1, r1
  d8:	1f 93       	push	r17
  da:	2f 93       	push	r18
  dc:	3f 93       	push	r19
  de:	4f 93       	push	r20
  e0:	5f 93       	push	r21
  e2:	6f 93       	push	r22
  e4:	7f 93       	push	r23
  e6:	8f 93       	push	r24
  e8:	9f 93       	push	r25
  ea:	af 93       	push	r26
  ec:	bf 93       	push	r27
  ee:	cf 93       	push	r28
  f0:	df 93       	push	r29
  f2:	ef 93       	push	r30
  f4:	ff 93       	push	r31
	//unsigned char DECODED;
	if(ADCH > 9)
  f6:	80 91 79 00 	lds	r24, 0x0079
  fa:	8a 30       	cpi	r24, 0x0A	; 10
  fc:	a0 f0       	brcs	.+40     	; 0x126 <__vector_21+0x58>
	{
		ACCUMULATE += ADCH;
  fe:	20 91 79 00 	lds	r18, 0x0079
 102:	80 91 20 01 	lds	r24, 0x0120
 106:	90 91 21 01 	lds	r25, 0x0121
 10a:	82 0f       	add	r24, r18
 10c:	91 1d       	adc	r25, r1
 10e:	90 93 21 01 	sts	0x0121, r25
 112:	80 93 20 01 	sts	0x0120, r24
		DIVISOR++;
 116:	80 91 1f 01 	lds	r24, 0x011F
 11a:	8f 5f       	subi	r24, 0xFF	; 255
 11c:	80 93 1f 01 	sts	0x011F, r24
	{	
		ACCUMULATE = 0;
		DIVISOR = 0;
	}
	
	if(DIVISOR == 10)
 120:	8a 30       	cpi	r24, 0x0A	; 10
 122:	41 f0       	breq	.+16     	; 0x134 <__vector_21+0x66>
 124:	26 c1       	rjmp	.+588    	; 0x372 <__vector_21+0x2a4>
		ACCUMULATE += ADCH;
		DIVISOR++;
	}
	else
	{	
		ACCUMULATE = 0;
 126:	10 92 21 01 	sts	0x0121, r1
 12a:	10 92 20 01 	sts	0x0120, r1
		DIVISOR = 0;
 12e:	10 92 1f 01 	sts	0x011F, r1
 132:	1f c1       	rjmp	.+574    	; 0x372 <__vector_21+0x2a4>
	}
	
	if(DIVISOR == 10)
	{
		QUOTIENT = ACCUMULATE/DIVISOR;
 134:	80 91 20 01 	lds	r24, 0x0120
 138:	90 91 21 01 	lds	r25, 0x0121
 13c:	6a e0       	ldi	r22, 0x0A	; 10
 13e:	70 e0       	ldi	r23, 0x00	; 0
 140:	0e 94 77 02 	call	0x4ee	; 0x4ee <__udivmodhi4>
 144:	86 2f       	mov	r24, r22
 146:	60 93 1c 01 	sts	0x011C, r22
		if	   ((QUOTIENT>9)&&(QUOTIENT<16))	DECODED = 1;
 14a:	96 2f       	mov	r25, r22
 14c:	9a 50       	subi	r25, 0x0A	; 10
 14e:	96 30       	cpi	r25, 0x06	; 6
 150:	20 f4       	brcc	.+8      	; 0x15a <__vector_21+0x8c>
 152:	81 e0       	ldi	r24, 0x01	; 1
 154:	80 93 1a 01 	sts	0x011A, r24
 158:	5e c0       	rjmp	.+188    	; 0x216 <__vector_21+0x148>
		else if((QUOTIENT>18)&&(QUOTIENT<26))	DECODED = 2;
 15a:	96 2f       	mov	r25, r22
 15c:	93 51       	subi	r25, 0x13	; 19
 15e:	97 30       	cpi	r25, 0x07	; 7
 160:	20 f4       	brcc	.+8      	; 0x16a <__vector_21+0x9c>
 162:	82 e0       	ldi	r24, 0x02	; 2
 164:	80 93 1a 01 	sts	0x011A, r24
 168:	56 c0       	rjmp	.+172    	; 0x216 <__vector_21+0x148>
		else if((QUOTIENT>29)&&(QUOTIENT<37))	DECODED = 3;
 16a:	96 2f       	mov	r25, r22
 16c:	9e 51       	subi	r25, 0x1E	; 30
 16e:	97 30       	cpi	r25, 0x07	; 7
 170:	20 f4       	brcc	.+8      	; 0x17a <__vector_21+0xac>
 172:	83 e0       	ldi	r24, 0x03	; 3
 174:	80 93 1a 01 	sts	0x011A, r24
 178:	4e c0       	rjmp	.+156    	; 0x216 <__vector_21+0x148>
		else if((QUOTIENT>46)&&(QUOTIENT<53))	DECODED = 4;
 17a:	96 2f       	mov	r25, r22
 17c:	9f 52       	subi	r25, 0x2F	; 47
 17e:	96 30       	cpi	r25, 0x06	; 6
 180:	20 f4       	brcc	.+8      	; 0x18a <__vector_21+0xbc>
 182:	84 e0       	ldi	r24, 0x04	; 4
 184:	80 93 1a 01 	sts	0x011A, r24
 188:	46 c0       	rjmp	.+140    	; 0x216 <__vector_21+0x148>
		else if((QUOTIENT>74)&&(QUOTIENT<81))	DECODED = 5;
 18a:	96 2f       	mov	r25, r22
 18c:	9b 54       	subi	r25, 0x4B	; 75
 18e:	96 30       	cpi	r25, 0x06	; 6
 190:	20 f4       	brcc	.+8      	; 0x19a <__vector_21+0xcc>
 192:	85 e0       	ldi	r24, 0x05	; 5
 194:	80 93 1a 01 	sts	0x011A, r24
 198:	3e c0       	rjmp	.+124    	; 0x216 <__vector_21+0x148>
		else if((QUOTIENT>99)&&(QUOTIENT<107))	DECODED = 6;
 19a:	96 2f       	mov	r25, r22
 19c:	94 56       	subi	r25, 0x64	; 100
 19e:	97 30       	cpi	r25, 0x07	; 7
 1a0:	20 f4       	brcc	.+8      	; 0x1aa <__vector_21+0xdc>
 1a2:	86 e0       	ldi	r24, 0x06	; 6
 1a4:	80 93 1a 01 	sts	0x011A, r24
 1a8:	36 c0       	rjmp	.+108    	; 0x216 <__vector_21+0x148>
		else if((QUOTIENT>133)&&(QUOTIENT<141))	DECODED = 7;
 1aa:	96 2f       	mov	r25, r22
 1ac:	96 58       	subi	r25, 0x86	; 134
 1ae:	97 30       	cpi	r25, 0x07	; 7
 1b0:	20 f4       	brcc	.+8      	; 0x1ba <__vector_21+0xec>
 1b2:	87 e0       	ldi	r24, 0x07	; 7
 1b4:	80 93 1a 01 	sts	0x011A, r24
 1b8:	2e c0       	rjmp	.+92     	; 0x216 <__vector_21+0x148>
		else if((QUOTIENT>169)&&(QUOTIENT<177))	DECODED = 8;
 1ba:	96 2f       	mov	r25, r22
 1bc:	9a 5a       	subi	r25, 0xAA	; 170
 1be:	97 30       	cpi	r25, 0x07	; 7
 1c0:	20 f4       	brcc	.+8      	; 0x1ca <__vector_21+0xfc>
 1c2:	88 e0       	ldi	r24, 0x08	; 8
 1c4:	80 93 1a 01 	sts	0x011A, r24
 1c8:	26 c0       	rjmp	.+76     	; 0x216 <__vector_21+0x148>
		else if((QUOTIENT>192)&&(QUOTIENT<199))	DECODED = 9;
 1ca:	96 2f       	mov	r25, r22
 1cc:	91 5c       	subi	r25, 0xC1	; 193
 1ce:	96 30       	cpi	r25, 0x06	; 6
 1d0:	20 f4       	brcc	.+8      	; 0x1da <__vector_21+0x10c>
 1d2:	89 e0       	ldi	r24, 0x09	; 9
 1d4:	80 93 1a 01 	sts	0x011A, r24
 1d8:	1e c0       	rjmp	.+60     	; 0x216 <__vector_21+0x148>
		else if((QUOTIENT>212)&&(QUOTIENT<220))	DECODED = 10;
 1da:	96 2f       	mov	r25, r22
 1dc:	95 5d       	subi	r25, 0xD5	; 213
 1de:	97 30       	cpi	r25, 0x07	; 7
 1e0:	40 f4       	brcc	.+16     	; 0x1f2 <__vector_21+0x124>
 1e2:	8a e0       	ldi	r24, 0x0A	; 10
 1e4:	80 93 1a 01 	sts	0x011A, r24
			D[1] = 16 ;
			D[2] = 16 ;
			D[3] = 16 ;  
			i = 0 ;	
		}
		else if (DECODED == 10 && i > 3 ) // start count
 1e8:	80 91 18 01 	lds	r24, 0x0118
 1ec:	84 30       	cpi	r24, 0x04	; 4
 1ee:	70 f5       	brcc	.+92     	; 0x24c <__vector_21+0x17e>
 1f0:	c0 c0       	rjmp	.+384    	; 0x372 <__vector_21+0x2a4>
		else if((QUOTIENT>99)&&(QUOTIENT<107))	DECODED = 6;
		else if((QUOTIENT>133)&&(QUOTIENT<141))	DECODED = 7;
		else if((QUOTIENT>169)&&(QUOTIENT<177))	DECODED = 8;
		else if((QUOTIENT>192)&&(QUOTIENT<199))	DECODED = 9;
		else if((QUOTIENT>212)&&(QUOTIENT<220))	DECODED = 10;
		else if((QUOTIENT>228)&&(QUOTIENT<236))	DECODED = 0;
 1f2:	96 2f       	mov	r25, r22
 1f4:	95 5e       	subi	r25, 0xE5	; 229
 1f6:	97 30       	cpi	r25, 0x07	; 7
 1f8:	18 f4       	brcc	.+6      	; 0x200 <__vector_21+0x132>
 1fa:	10 92 1a 01 	sts	0x011A, r1
 1fe:	0b c0       	rjmp	.+22     	; 0x216 <__vector_21+0x148>
		else if((QUOTIENT>236)&&(QUOTIENT<244))	DECODED = 11;
 200:	8d 5e       	subi	r24, 0xED	; 237
 202:	87 30       	cpi	r24, 0x07	; 7
 204:	20 f4       	brcc	.+8      	; 0x20e <__vector_21+0x140>
 206:	8b e0       	ldi	r24, 0x0B	; 11
 208:	80 93 1a 01 	sts	0x011A, r24
 20c:	04 c0       	rjmp	.+8      	; 0x216 <__vector_21+0x148>
		else									DECODED = 16; //assume no keypad		
 20e:	80 e1       	ldi	r24, 0x10	; 16
 210:	80 93 1a 01 	sts	0x011A, r24
 214:	ae c0       	rjmp	.+348    	; 0x372 <__vector_21+0x2a4>
			
		if(DECODED != 16 && DECODED != 10 && DECODED != 11 )	
 216:	90 91 1a 01 	lds	r25, 0x011A
 21a:	9b 30       	cpi	r25, 0x0B	; 11
 21c:	59 f0       	breq	.+22     	; 0x234 <__vector_21+0x166>
		{	
			D[i] = DECODED;
 21e:	80 91 18 01 	lds	r24, 0x0118
 222:	e3 e1       	ldi	r30, 0x13	; 19
 224:	f1 e0       	ldi	r31, 0x01	; 1
 226:	e8 0f       	add	r30, r24
 228:	f1 1d       	adc	r31, r1
 22a:	90 83       	st	Z, r25
			i++ ;			  				
 22c:	8f 5f       	subi	r24, 0xFF	; 255
 22e:	80 93 18 01 	sts	0x0118, r24
 232:	9f c0       	rjmp	.+318    	; 0x372 <__vector_21+0x2a4>
		}		
		else if (DECODED == 11 ) // reset value
		{		
			D[0] = 16 ;
 234:	80 e1       	ldi	r24, 0x10	; 16
 236:	80 93 13 01 	sts	0x0113, r24
			D[1] = 16 ;
 23a:	80 93 14 01 	sts	0x0114, r24
			D[2] = 16 ;
 23e:	80 93 15 01 	sts	0x0115, r24
			D[3] = 16 ;  
 242:	80 93 16 01 	sts	0x0116, r24
			i = 0 ;	
 246:	10 92 18 01 	sts	0x0118, r1
 24a:	93 c0       	rjmp	.+294    	; 0x372 <__vector_21+0x2a4>
		}
		else if (DECODED == 10 && i > 3 ) // start count
		{	
			j = D[0] ;
 24c:	80 91 13 01 	lds	r24, 0x0113
 250:	80 93 1b 01 	sts	0x011B, r24
			k = D[1] ;
 254:	90 91 14 01 	lds	r25, 0x0114
 258:	90 93 1e 01 	sts	0x011E, r25
			l = D[2] ;
 25c:	90 91 15 01 	lds	r25, 0x0115
 260:	90 93 1d 01 	sts	0x011D, r25
			m = D[3] ;
 264:	90 91 16 01 	lds	r25, 0x0116
 268:	90 93 22 01 	sts	0x0122, r25
			for (;j >= 0 ; j--)
			{
				if (j == 255)
 26c:	8f 3f       	cpi	r24, 0xFF	; 255
 26e:	79 f0       	breq	.+30     	; 0x28e <__vector_21+0x1c0>
								m = 9;
								D[3] = 0;
								break;
							}
							
							PORTD = 0b0111 ;
 270:	77 e0       	ldi	r23, 0x07	; 7
							PORTB = TB7SEG[j] ;
 272:	80 e0       	ldi	r24, 0x00	; 0
 274:	91 e0       	ldi	r25, 0x01	; 1
							_delay_ms(15);
							PORTD = 0b1011 ;
 276:	6b e0       	ldi	r22, 0x0B	; 11
							PORTB = TB7SEG[k]  ;
							_delay_ms(15);
							PORTD = 0b1101 ;
 278:	5d e0       	ldi	r21, 0x0D	; 13
							PORTB = TB7SEG[l]  ;
							_delay_ms(15);
							PORTD = 0b1110 ;
 27a:	4e e0       	ldi	r20, 0x0E	; 14
						for (;m >=0 ; m--)
						{
							if (m == 255)
							{
								m = 9;
								D[3] = 0;
 27c:	a6 e1       	ldi	r26, 0x16	; 22
 27e:	b1 e0       	ldi	r27, 0x01	; 1
					for (;l >= 0 ; l--)
					{
						if (l == 255)
						{
							l = 9;
							D[2] = 0;
 280:	c5 e1       	ldi	r28, 0x15	; 21
 282:	d1 e0       	ldi	r29, 0x01	; 1
					D[0] = 0;
					break;
				}
				for (;k >= 0 ; k--)
				{
					if (k == 255)
 284:	20 91 1e 01 	lds	r18, 0x011E
 288:	2f 3f       	cpi	r18, 0xFF	; 255
 28a:	39 f4       	brne	.+14     	; 0x29a <__vector_21+0x1cc>
 28c:	0c c0       	rjmp	.+24     	; 0x2a6 <__vector_21+0x1d8>
			m = D[3] ;
			for (;j >= 0 ; j--)
			{
				if (j == 255)
				{
					j = 9;
 28e:	89 e0       	ldi	r24, 0x09	; 9
 290:	80 93 1b 01 	sts	0x011B, r24
					D[0] = 0;
 294:	10 92 13 01 	sts	0x0113, r1
 298:	6c c0       	rjmp	.+216    	; 0x372 <__vector_21+0x2a4>
						
						for (;m >=0 ; m--)
						{
							if (m == 255)
							{
								m = 9;
 29a:	19 e0       	ldi	r17, 0x09	; 9
						D[1] = 0;
						break;
					}
					for (;l >= 0 ; l--)
					{
						if (l == 255)
 29c:	20 91 1d 01 	lds	r18, 0x011D
 2a0:	2f 3f       	cpi	r18, 0xFF	; 255
 2a2:	71 f4       	brne	.+28     	; 0x2c0 <__vector_21+0x1f2>
 2a4:	12 c0       	rjmp	.+36     	; 0x2ca <__vector_21+0x1fc>
				}
				for (;k >= 0 ; k--)
				{
					if (k == 255)
					{
						k = 9;
 2a6:	29 e0       	ldi	r18, 0x09	; 9
 2a8:	20 93 1e 01 	sts	0x011E, r18
						D[1] = 0;
 2ac:	10 92 14 01 	sts	0x0114, r1
		{	
			j = D[0] ;
			k = D[1] ;
			l = D[2] ;
			m = D[3] ;
			for (;j >= 0 ; j--)
 2b0:	20 91 1b 01 	lds	r18, 0x011B
 2b4:	21 50       	subi	r18, 0x01	; 1
 2b6:	20 93 1b 01 	sts	0x011B, r18
			{
				if (j == 255)
 2ba:	2f 3f       	cpi	r18, 0xFF	; 255
 2bc:	19 f7       	brne	.-58     	; 0x284 <__vector_21+0x1b6>
 2be:	e7 cf       	rjmp	.-50     	; 0x28e <__vector_21+0x1c0>
							break;
						}
						
						for (;m >=0 ; m--)
						{
							if (m == 255)
 2c0:	20 91 22 01 	lds	r18, 0x0122
 2c4:	2f 3f       	cpi	r18, 0xFF	; 255
 2c6:	b9 f4       	brne	.+46     	; 0x2f6 <__vector_21+0x228>
 2c8:	0b c0       	rjmp	.+22     	; 0x2e0 <__vector_21+0x212>
					}
					for (;l >= 0 ; l--)
					{
						if (l == 255)
						{
							l = 9;
 2ca:	10 93 1d 01 	sts	0x011D, r17
							D[2] = 0;
 2ce:	18 82       	st	Y, r1
				{
					j = 9;
					D[0] = 0;
					break;
				}
				for (;k >= 0 ; k--)
 2d0:	20 91 1e 01 	lds	r18, 0x011E
 2d4:	21 50       	subi	r18, 0x01	; 1
 2d6:	20 93 1e 01 	sts	0x011E, r18
				{
					if (k == 255)
 2da:	2f 3f       	cpi	r18, 0xFF	; 255
 2dc:	f9 f6       	brne	.-66     	; 0x29c <__vector_21+0x1ce>
 2de:	e3 cf       	rjmp	.-58     	; 0x2a6 <__vector_21+0x1d8>
						
						for (;m >=0 ; m--)
						{
							if (m == 255)
							{
								m = 9;
 2e0:	10 93 22 01 	sts	0x0122, r17
								D[3] = 0;
 2e4:	1c 92       	st	X, r1
					{
						k = 9;
						D[1] = 0;
						break;
					}
					for (;l >= 0 ; l--)
 2e6:	20 91 1d 01 	lds	r18, 0x011D
 2ea:	21 50       	subi	r18, 0x01	; 1
 2ec:	20 93 1d 01 	sts	0x011D, r18
					{
						if (l == 255)
 2f0:	2f 3f       	cpi	r18, 0xFF	; 255
 2f2:	31 f7       	brne	.-52     	; 0x2c0 <__vector_21+0x1f2>
 2f4:	ea cf       	rjmp	.-44     	; 0x2ca <__vector_21+0x1fc>
								m = 9;
								D[3] = 0;
								break;
							}
							
							PORTD = 0b0111 ;
 2f6:	7b b9       	out	0x0b, r23	; 11
							PORTB = TB7SEG[j] ;
 2f8:	20 91 1b 01 	lds	r18, 0x011B
 2fc:	fc 01       	movw	r30, r24
 2fe:	e2 0f       	add	r30, r18
 300:	f1 1d       	adc	r31, r1
 302:	20 81       	ld	r18, Z
 304:	25 b9       	out	0x05, r18	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 306:	e5 ea       	ldi	r30, 0xA5	; 165
 308:	fe e0       	ldi	r31, 0x0E	; 14
 30a:	31 97       	sbiw	r30, 0x01	; 1
 30c:	f1 f7       	brne	.-4      	; 0x30a <__vector_21+0x23c>
 30e:	00 c0       	rjmp	.+0      	; 0x310 <__vector_21+0x242>
 310:	00 00       	nop
							_delay_ms(15);
							PORTD = 0b1011 ;
 312:	6b b9       	out	0x0b, r22	; 11
							PORTB = TB7SEG[k]  ;
 314:	20 91 1e 01 	lds	r18, 0x011E
 318:	fc 01       	movw	r30, r24
 31a:	e2 0f       	add	r30, r18
 31c:	f1 1d       	adc	r31, r1
 31e:	20 81       	ld	r18, Z
 320:	25 b9       	out	0x05, r18	; 5
 322:	e5 ea       	ldi	r30, 0xA5	; 165
 324:	fe e0       	ldi	r31, 0x0E	; 14
 326:	31 97       	sbiw	r30, 0x01	; 1
 328:	f1 f7       	brne	.-4      	; 0x326 <__vector_21+0x258>
 32a:	00 c0       	rjmp	.+0      	; 0x32c <__vector_21+0x25e>
 32c:	00 00       	nop
							_delay_ms(15);
							PORTD = 0b1101 ;
 32e:	5b b9       	out	0x0b, r21	; 11
							PORTB = TB7SEG[l]  ;
 330:	20 91 1d 01 	lds	r18, 0x011D
 334:	fc 01       	movw	r30, r24
 336:	e2 0f       	add	r30, r18
 338:	f1 1d       	adc	r31, r1
 33a:	20 81       	ld	r18, Z
 33c:	25 b9       	out	0x05, r18	; 5
 33e:	e5 ea       	ldi	r30, 0xA5	; 165
 340:	fe e0       	ldi	r31, 0x0E	; 14
 342:	31 97       	sbiw	r30, 0x01	; 1
 344:	f1 f7       	brne	.-4      	; 0x342 <__vector_21+0x274>
 346:	00 c0       	rjmp	.+0      	; 0x348 <__vector_21+0x27a>
 348:	00 00       	nop
							_delay_ms(15);
							PORTD = 0b1110 ;
 34a:	4b b9       	out	0x0b, r20	; 11
							PORTB = TB7SEG[m]  ;
 34c:	20 91 22 01 	lds	r18, 0x0122
 350:	fc 01       	movw	r30, r24
 352:	e2 0f       	add	r30, r18
 354:	f1 1d       	adc	r31, r1
 356:	30 81       	ld	r19, Z
 358:	35 b9       	out	0x05, r19	; 5
 35a:	e5 ea       	ldi	r30, 0xA5	; 165
 35c:	fe e0       	ldi	r31, 0x0E	; 14
 35e:	31 97       	sbiw	r30, 0x01	; 1
 360:	f1 f7       	brne	.-4      	; 0x35e <__vector_21+0x290>
 362:	00 c0       	rjmp	.+0      	; 0x364 <__vector_21+0x296>
 364:	00 00       	nop
							l = 9;
							D[2] = 0;
							break;
						}
						
						for (;m >=0 ; m--)
 366:	21 50       	subi	r18, 0x01	; 1
 368:	20 93 22 01 	sts	0x0122, r18
						{
							if (m == 255)
 36c:	2f 3f       	cpi	r18, 0xFF	; 255
 36e:	19 f6       	brne	.-122    	; 0x2f6 <__vector_21+0x228>
 370:	b7 cf       	rjmp	.-146    	; 0x2e0 <__vector_21+0x212>
				}		
			}
		}
	}		
			
}
 372:	ff 91       	pop	r31
 374:	ef 91       	pop	r30
 376:	df 91       	pop	r29
 378:	cf 91       	pop	r28
 37a:	bf 91       	pop	r27
 37c:	af 91       	pop	r26
 37e:	9f 91       	pop	r25
 380:	8f 91       	pop	r24
 382:	7f 91       	pop	r23
 384:	6f 91       	pop	r22
 386:	5f 91       	pop	r21
 388:	4f 91       	pop	r20
 38a:	3f 91       	pop	r19
 38c:	2f 91       	pop	r18
 38e:	1f 91       	pop	r17
 390:	0f 90       	pop	r0
 392:	0f be       	out	0x3f, r0	; 63
 394:	0f 90       	pop	r0
 396:	1f 90       	pop	r1
 398:	18 95       	reti

0000039a <main>:

int main(void)
{
 39a:	5f 92       	push	r5
 39c:	6f 92       	push	r6
 39e:	7f 92       	push	r7
 3a0:	8f 92       	push	r8
 3a2:	9f 92       	push	r9
 3a4:	af 92       	push	r10
 3a6:	bf 92       	push	r11
 3a8:	cf 92       	push	r12
 3aa:	df 92       	push	r13
 3ac:	ef 92       	push	r14
 3ae:	ff 92       	push	r15
 3b0:	0f 93       	push	r16
 3b2:	1f 93       	push	r17
 3b4:	cf 93       	push	r28
 3b6:	df 93       	push	r29
    
	DDRB = 0xFF;	//port B is connected to 7seg ment
 3b8:	8f ef       	ldi	r24, 0xFF	; 255
 3ba:	84 b9       	out	0x04, r24	; 4
	PORTB = TURN_ALL_LED_OFF; //turn off all segment
 3bc:	15 b8       	out	0x05, r1	; 5
	DDRD = 0x4F;    //common cathod
 3be:	8f e4       	ldi	r24, 0x4F	; 79
 3c0:	8a b9       	out	0x0a, r24	; 10
	PORTD = 0x40 ;
 3c2:	80 e4       	ldi	r24, 0x40	; 64
 3c4:	8b b9       	out	0x0b, r24	; 11
		//ADMUX[7:6] = 00 -> using AREF pin
		//ADMUX[5] = 1 -> ADLR = 1
		//ADMUX[3:0] = -> ADC0 pin
	ADMUX = 0b00100000;
 3c6:	80 e2       	ldi	r24, 0x20	; 32
 3c8:	80 93 7c 00 	sts	0x007C, r24
		//ADCSRA[6]=0 -> ADC start coversion chang auto
		//ADCSRA[5]=1 -> enable auto trigger
		//ADCSRA[4]=0 -> ADC interrupt Flag
		//ADCSRA[3]=1 -> ADC interrupt enable
		//ADCSRA[2:0]=101 -> Division factor/32
	ADCSRA = 0b10101101;
 3cc:	8d ea       	ldi	r24, 0xAD	; 173
 3ce:	80 93 7a 00 	sts	0x007A, r24
	//-----------------ADCSRB--------------
	//ADCSRB[2:0] = 110 -> Trigger source = Timer1 OVF
	ADCSRB = 0x06;
 3d2:	86 e0       	ldi	r24, 0x06	; 6
 3d4:	80 93 7b 00 	sts	0x007B, r24
	
	//------Timger1 setup-----------------------------------
	TCNT1 = INTERVAL_time;
 3d8:	88 ef       	ldi	r24, 0xF8	; 248
 3da:	9f ef       	ldi	r25, 0xFF	; 255
 3dc:	90 93 85 00 	sts	0x0085, r25
 3e0:	80 93 84 00 	sts	0x0084, r24
	//Normal mode, N = 1024,
	TCCR1A = 0x00;
 3e4:	10 92 80 00 	sts	0x0080, r1
	TCCR1B = 0x05;
 3e8:	85 e0       	ldi	r24, 0x05	; 5
 3ea:	80 93 81 00 	sts	0x0081, r24
	TIMSK1 = 0x01;
 3ee:	81 e0       	ldi	r24, 0x01	; 1
 3f0:	80 93 6f 00 	sts	0x006F, r24
	sei();
 3f4:	78 94       	sei
	
	DIVISOR = 0;
 3f6:	10 92 1f 01 	sts	0x011F, r1
	//----------loop------------------
	while(1)
	{
		PORTD = 0b0111 | LIGHT;
 3fa:	61 e1       	ldi	r22, 0x11	; 17
 3fc:	71 e0       	ldi	r23, 0x01	; 1
		PORTB = TB7SEG[D[0]] ;
 3fe:	a3 e1       	ldi	r26, 0x13	; 19
 400:	b1 e0       	ldi	r27, 0x01	; 1
 402:	80 e0       	ldi	r24, 0x00	; 0
 404:	91 e0       	ldi	r25, 0x01	; 1
		_delay_ms(15);
		PORTD = 0b1011 | LIGHT;
		PORTB = TB7SEG[D[1]]  ;
 406:	ad 01       	movw	r20, r26
 408:	4f 5f       	subi	r20, 0xFF	; 255
 40a:	5f 4f       	sbci	r21, 0xFF	; 255
		_delay_ms(15);
		PORTD = 0b1101 | LIGHT;
		PORTB = TB7SEG[D[2]]  ;
 40c:	9d 01       	movw	r18, r26
 40e:	2e 5f       	subi	r18, 0xFE	; 254
 410:	3f 4f       	sbci	r19, 0xFF	; 255
		_delay_ms(15);
		PORTD = 0b1110 | LIGHT;
		PORTB = TB7SEG[D[3]]  ;
 412:	ed 01       	movw	r28, r26
 414:	23 96       	adiw	r28, 0x03	; 3
		_delay_ms(15);
		
		if (D[0] == 0 && D[1] == 0 && D[2] == 0 && D[3] == 0)
 416:	04 e1       	ldi	r16, 0x14	; 20
 418:	11 e0       	ldi	r17, 0x01	; 1
 41a:	0f 2e       	mov	r0, r31
 41c:	f5 e1       	ldi	r31, 0x15	; 21
 41e:	ef 2e       	mov	r14, r31
 420:	f1 e0       	ldi	r31, 0x01	; 1
 422:	ff 2e       	mov	r15, r31
 424:	f0 2d       	mov	r31, r0
 426:	0f 2e       	mov	r0, r31
 428:	f6 e1       	ldi	r31, 0x16	; 22
 42a:	cf 2e       	mov	r12, r31
 42c:	f1 e0       	ldi	r31, 0x01	; 1
 42e:	df 2e       	mov	r13, r31
 430:	f0 2d       	mov	r31, r0
		{
			LIGHT = 0xF0;
 432:	0f 2e       	mov	r0, r31
 434:	f0 ef       	ldi	r31, 0xF0	; 240
 436:	8f 2e       	mov	r8, r31
 438:	99 24       	eor	r9, r9
 43a:	f0 2d       	mov	r31, r0
	
	DIVISOR = 0;
	//----------loop------------------
	while(1)
	{
		PORTD = 0b0111 | LIGHT;
 43c:	fb 01       	movw	r30, r22
 43e:	a0 80       	ld	r10, Z
 440:	ea 2d       	mov	r30, r10
 442:	e7 60       	ori	r30, 0x07	; 7
 444:	eb b9       	out	0x0b, r30	; 11
		PORTB = TB7SEG[D[0]] ;
 446:	bc 90       	ld	r11, X
 448:	fc 01       	movw	r30, r24
 44a:	eb 0d       	add	r30, r11
 44c:	f1 1d       	adc	r31, r1
 44e:	e0 81       	ld	r30, Z
 450:	e5 b9       	out	0x05, r30	; 5
 452:	e5 ea       	ldi	r30, 0xA5	; 165
 454:	fe e0       	ldi	r31, 0x0E	; 14
 456:	31 97       	sbiw	r30, 0x01	; 1
 458:	f1 f7       	brne	.-4      	; 0x456 <main+0xbc>
 45a:	00 c0       	rjmp	.+0      	; 0x45c <main+0xc2>
 45c:	00 00       	nop
		_delay_ms(15);
		PORTD = 0b1011 | LIGHT;
 45e:	ea 2d       	mov	r30, r10
 460:	eb 60       	ori	r30, 0x0B	; 11
 462:	eb b9       	out	0x0b, r30	; 11
		PORTB = TB7SEG[D[1]]  ;
 464:	fa 01       	movw	r30, r20
 466:	50 80       	ld	r5, Z
 468:	fc 01       	movw	r30, r24
 46a:	e5 0d       	add	r30, r5
 46c:	f1 1d       	adc	r31, r1
 46e:	e0 81       	ld	r30, Z
 470:	e5 b9       	out	0x05, r30	; 5
 472:	e5 ea       	ldi	r30, 0xA5	; 165
 474:	fe e0       	ldi	r31, 0x0E	; 14
 476:	31 97       	sbiw	r30, 0x01	; 1
 478:	f1 f7       	brne	.-4      	; 0x476 <main+0xdc>
 47a:	00 c0       	rjmp	.+0      	; 0x47c <main+0xe2>
 47c:	00 00       	nop
		_delay_ms(15);
		PORTD = 0b1101 | LIGHT;
 47e:	ea 2d       	mov	r30, r10
 480:	ed 60       	ori	r30, 0x0D	; 13
 482:	eb b9       	out	0x0b, r30	; 11
		PORTB = TB7SEG[D[2]]  ;
 484:	f9 01       	movw	r30, r18
 486:	50 80       	ld	r5, Z
 488:	fc 01       	movw	r30, r24
 48a:	e5 0d       	add	r30, r5
 48c:	f1 1d       	adc	r31, r1
 48e:	e0 81       	ld	r30, Z
 490:	e5 b9       	out	0x05, r30	; 5
 492:	e5 ea       	ldi	r30, 0xA5	; 165
 494:	fe e0       	ldi	r31, 0x0E	; 14
 496:	31 97       	sbiw	r30, 0x01	; 1
 498:	f1 f7       	brne	.-4      	; 0x496 <main+0xfc>
 49a:	00 c0       	rjmp	.+0      	; 0x49c <main+0x102>
 49c:	00 00       	nop
		_delay_ms(15);
		PORTD = 0b1110 | LIGHT;
 49e:	ea 2d       	mov	r30, r10
 4a0:	ee 60       	ori	r30, 0x0E	; 14
 4a2:	eb b9       	out	0x0b, r30	; 11
		PORTB = TB7SEG[D[3]]  ;
 4a4:	e8 81       	ld	r30, Y
 4a6:	3c 01       	movw	r6, r24
 4a8:	6e 0e       	add	r6, r30
 4aa:	71 1c       	adc	r7, r1
 4ac:	f3 01       	movw	r30, r6
 4ae:	e0 81       	ld	r30, Z
 4b0:	e5 b9       	out	0x05, r30	; 5
 4b2:	e5 ea       	ldi	r30, 0xA5	; 165
 4b4:	fe e0       	ldi	r31, 0x0E	; 14
 4b6:	31 97       	sbiw	r30, 0x01	; 1
 4b8:	f1 f7       	brne	.-4      	; 0x4b6 <main+0x11c>
 4ba:	00 c0       	rjmp	.+0      	; 0x4bc <main+0x122>
 4bc:	00 00       	nop
		_delay_ms(15);
		
		if (D[0] == 0 && D[1] == 0 && D[2] == 0 && D[3] == 0)
 4be:	bb 20       	and	r11, r11
 4c0:	89 f4       	brne	.+34     	; 0x4e4 <main+0x14a>
 4c2:	f8 01       	movw	r30, r16
 4c4:	b0 80       	ld	r11, Z
 4c6:	bb 20       	and	r11, r11
 4c8:	69 f4       	brne	.+26     	; 0x4e4 <main+0x14a>
 4ca:	f7 01       	movw	r30, r14
 4cc:	b0 80       	ld	r11, Z
 4ce:	bb 20       	and	r11, r11
 4d0:	49 f4       	brne	.+18     	; 0x4e4 <main+0x14a>
 4d2:	f6 01       	movw	r30, r12
 4d4:	b0 80       	ld	r11, Z
 4d6:	bb 20       	and	r11, r11
 4d8:	29 f4       	brne	.+10     	; 0x4e4 <main+0x14a>
		{
			LIGHT = 0xF0;
 4da:	90 92 12 01 	sts	0x0112, r9
 4de:	80 92 11 01 	sts	0x0111, r8
 4e2:	ac cf       	rjmp	.-168    	; 0x43c <main+0xa2>
		}
		else
		{
			LIGHT = 0x00;
 4e4:	10 92 12 01 	sts	0x0112, r1
 4e8:	10 92 11 01 	sts	0x0111, r1
 4ec:	a7 cf       	rjmp	.-178    	; 0x43c <main+0xa2>

000004ee <__udivmodhi4>:
 4ee:	aa 1b       	sub	r26, r26
 4f0:	bb 1b       	sub	r27, r27
 4f2:	51 e1       	ldi	r21, 0x11	; 17
 4f4:	07 c0       	rjmp	.+14     	; 0x504 <__udivmodhi4_ep>

000004f6 <__udivmodhi4_loop>:
 4f6:	aa 1f       	adc	r26, r26
 4f8:	bb 1f       	adc	r27, r27
 4fa:	a6 17       	cp	r26, r22
 4fc:	b7 07       	cpc	r27, r23
 4fe:	10 f0       	brcs	.+4      	; 0x504 <__udivmodhi4_ep>
 500:	a6 1b       	sub	r26, r22
 502:	b7 0b       	sbc	r27, r23

00000504 <__udivmodhi4_ep>:
 504:	88 1f       	adc	r24, r24
 506:	99 1f       	adc	r25, r25
 508:	5a 95       	dec	r21
 50a:	a9 f7       	brne	.-22     	; 0x4f6 <__udivmodhi4_loop>
 50c:	80 95       	com	r24
 50e:	90 95       	com	r25
 510:	bc 01       	movw	r22, r24
 512:	cd 01       	movw	r24, r26
 514:	08 95       	ret

00000516 <_exit>:
 516:	f8 94       	cli

00000518 <__stop_program>:
 518:	ff cf       	rjmp	.-2      	; 0x518 <__stop_program>
